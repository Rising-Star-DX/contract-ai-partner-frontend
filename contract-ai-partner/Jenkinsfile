pipeline {
    agent any
    
    // node 사용 설정
    tools {
        nodejs "NodeJs" // Global Tool Configuration에서 지정한 이름
    }

    // (선택) 환경 변수 설정
    environment {
        // Jenkins에 등록해 둔 AWS 자격증명(Username/Password 형태) - 예시 ID: aws-cred-frontend
        AWS_ACCESS_KEY_ID     = credentials('aws-cred-frontend')
        AWS_SECRET_ACCESS_KEY = credentials('aws-cred-frontend')
    }

    stages {
        stage('Install Dependencies') {
            steps {
                // Jenkins 작업 디렉터리는 이미 /contract-ai-partner 가 됩니다(스크립트 경로 기준).
                // npm 패키지 설치
                sh 'npm install'
            }
        }

        stage('Build') {
            steps {
                // React 프로덕션 빌드
                sh 'npm run build'
            }
        }

        stage('Test') {
            steps {
                // 유닛 테스트, 혹은 ESLint, Jest 등 빌드 안정성 검증
                sh 'npm test'
            }
        }

        stage('Deploy to S3') {
            steps {
                // AWS CLI로 S3 동기화
                // AWS_ACCESS_KEY_ID / AWS_SECRET_ACCESS_KEY 환경변수를 참조.
                sh '''
                aws s3 sync build/ s3://rising-star-react \
                    --delete \
                    --region ap-northeast-2
                '''
            }
        }

        stage('Invalidate CloudFront') {
            steps {
                // CloudFront 캐시 무효화
                sh '''
                aws cloudfront create-invalidation \
                    --distribution-id E1F9N524PHSA3M \
                    --paths "/*"
                '''
            }
        }
    }

    post {
        success {
            echo "✅ 빌드 및 배포에 성공했습니다!"
        }
        failure {
            echo "❌ 배포 실패! 로그를 확인해 주세요."
        }
    }
}
